var searchIndex = {};
searchIndex["elma"] = {"doc":"Library for reading and writing Elasto Mania files.","items":[[3,"Position","elma","Shared position struct.",null,null],[12,"x","","X-position.",0,null],[12,"y","","Y-position.",0,null],[0,"lev","","Read and write Elasto Mania level files.",null,null],[3,"Object","elma::lev","Object struct. Every level requires one ObjectType::Player Object and at least one ObjectType::Exit Object.",null,null],[12,"position","","Position. See Position struct.",1,null],[12,"object_type","","Type of Object, see ObjectType.",1,null],[12,"gravity","","Applies to ObjectType::Apple only.",1,null],[12,"animation","","Applies to ObjectType::Apple only. Valid values are 1 to 9.",1,null],[3,"Polygon","","Polygon struct.",null,null],[12,"grass","","Grass polygon.",2,null],[12,"vertices","","Vector with all vertices, see Position struct.",2,null],[3,"Picture","","Picture struct.",null,null],[12,"name","","Picture name.",3,null],[12,"texture","","Texture name.",3,null],[12,"mask","","Mask name.",3,null],[12,"position","","Position. See Position struct.",3,null],[12,"distance","","Z-distance",3,null],[12,"clip","","Clipping.",3,null],[3,"ListEntry","","Top10 list entry struct.",null,null],[12,"name_1","","Player 1 name.",4,null],[12,"name_2","","Player 2 name.",4,null],[12,"time","","Time.",4,null],[3,"Level","","Level struct that contains all level information.",null,null],[12,"version","","Elma or Across level.",5,null],[12,"link","","Random number that links level file to replay files.",5,null],[12,"integrity","","Contains four integrity checks (See create_integrity()).",5,null],[12,"name","","Level name.",5,null],[12,"lgr","","LGR file name.",5,null],[12,"ground","","Ground texture name.",5,null],[12,"sky","","Sky texture name.",5,null],[12,"polygons","","Vector with all polygons (See Polygon).",5,null],[12,"objects","","Vector with all objects (See Object).",5,null],[12,"pictures","","Vector with all pictures (See Picture).",5,null],[12,"top10_single","","Vector of Top10 single-player names and times.",5,null],[12,"top10_multi","","Vector of Top10 multi-player names and times.",5,null],[4,"Version","","Game version.",null,null],[13,"Across","","",6,null],[13,"Elma","","",6,null],[4,"ObjectType","","Type of object.",null,null],[13,"Apple","","",7,null],[13,"Exit","","",7,null],[13,"Killer","","",7,null],[13,"Player","","",7,null],[5,"crypt_top10","","Decrypt and encrypt top10 list data. Same algorithm for both.",null,{"inputs":[{"name":"vec"}],"output":{"name":"vec"}}],[5,"parse_top10","","Parse top10 lists and return a vector of ListEntrys",null,null],[11,"eq","","",6,{"inputs":[{"name":"version"},{"name":"version"}],"output":{"name":"bool"}}],[11,"fmt","","",6,{"inputs":[{"name":"version"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",7,{"inputs":[{"name":"objecttype"},{"name":"objecttype"}],"output":{"name":"bool"}}],[11,"fmt","","",7,{"inputs":[{"name":"objecttype"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",1,{"inputs":[{"name":"object"},{"name":"object"}],"output":{"name":"bool"}}],[11,"ne","","",1,{"inputs":[{"name":"object"},{"name":"object"}],"output":{"name":"bool"}}],[11,"fmt","","",1,{"inputs":[{"name":"object"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"polygon"},{"name":"polygon"}],"output":{"name":"bool"}}],[11,"ne","","",2,{"inputs":[{"name":"polygon"},{"name":"polygon"}],"output":{"name":"bool"}}],[11,"fmt","","",2,{"inputs":[{"name":"polygon"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","",2,{"inputs":[],"output":{"name":"polygon"}}],[11,"fmt","","",4,{"inputs":[{"name":"listentry"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Returns a new Level struct.",5,{"inputs":[],"output":{"name":"level"}}],[11,"load_level","","Loads a level file and returns a Level struct.",5,{"inputs":[{"name":"str"}],"output":{"name":"level"}}],[11,"get_raw","","Converts all struct fields into raw binary form and returns it.",5,{"inputs":[{"name":"level"}],"output":{"name":"vec"}}],[11,"save_lev","","Saves level as a file.",5,{"inputs":[{"name":"level"},{"name":"str"}],"output":null}],[0,"rec","elma","Read and write Elasto Mania replay files.",null,null],[3,"Frame","elma::rec","One frame of replay.",null,null],[12,"bike","","Bike position?",8,null],[12,"left_wheel","","Left wheel position.",8,null],[12,"right_wheel","","Right wheel position.",8,null],[12,"head","","Head position.",8,null],[12,"rotation","","Bike rotation. Range 0..10000.",8,null],[12,"left_wheel_rotation","","Left wheel rotation. Range 0..255.",8,null],[12,"right_wheel_rotation","","Right wheel rotation. Range 0..255.",8,null],[12,"throttle","","Throttle.",8,null],[12,"right","","Right direction. True = right, False = left.",8,null],[12,"volume","","Spring sound effect volume.",8,null],[3,"Event","","",null,null],[12,"time","","Time of event.",9,null],[12,"event_type","","Event type.",9,null],[3,"Rec","","Rec struct",null,null],[12,"frame_count","","Number of Frames in replay.",10,null],[12,"multi","","Whether replay is multi-player or not.",10,null],[12,"flag_tag","","Whether replay is flag-tag or not.",10,null],[12,"link","","Random number to link with level file.",10,null],[12,"level","","Full level filename.",10,null],[12,"frames","","Vector with Frame structs.",10,null],[12,"events","","Events.",10,null],[11,"eq","","",8,{"inputs":[{"name":"frame"},{"name":"frame"}],"output":{"name":"bool"}}],[11,"ne","","",8,{"inputs":[{"name":"frame"},{"name":"frame"}],"output":{"name":"bool"}}],[11,"fmt","","",8,{"inputs":[{"name":"frame"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",9,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"ne","","",9,{"inputs":[{"name":"event"},{"name":"event"}],"output":{"name":"bool"}}],[11,"fmt","","",9,{"inputs":[{"name":"event"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Build a new Rec.",10,{"inputs":[],"output":{"name":"rec"}}],[11,"load_replay","","Loads a replay file and returns a Rec struct.",10,{"inputs":[{"name":"str"}],"output":{"name":"rec"}}],[11,"eq","elma","",0,{"inputs":[{"name":"position"},{"name":"position"}],"output":{"name":"bool"}}],[11,"ne","","",0,{"inputs":[{"name":"position"},{"name":"position"}],"output":{"name":"bool"}}],[11,"fmt","","",0,{"inputs":[{"name":"position"},{"name":"formatter"}],"output":{"name":"result"}}]],"paths":[[3,"Position"],[3,"Object"],[3,"Polygon"],[3,"Picture"],[3,"ListEntry"],[3,"Level"],[4,"Version"],[4,"ObjectType"],[3,"Frame"],[3,"Event"],[3,"Rec"]]};
initSearch(searchIndex);
